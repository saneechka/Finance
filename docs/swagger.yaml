openapi: 3.0.0
info:
  title: Finance Management API
  description: API for financial operations including deposits, loans, and user management
  version: 1.0.0
  
servers:
  - url: http://localhost:8082
    description: Local development server
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [client, admin, operator, manager]
        approved:
          type: boolean
        created_at:
          type: string
          format: date-time
    
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
          
    RegisterRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [client, admin, operator, manager]
    
    Deposit:
      type: object
      properties:
        deposit_id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        bank_name:
          type: string
        amount:
          type: number
          format: float
        interest:
          type: number
          format: float
        is_blocked:
          type: boolean
        is_frozen:
          type: boolean
        freeze_until:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
    
    LoanRequest:
      type: object
      required:
        - amount
        - term_months
        - type
      properties:
        user_id:
          type: integer
          format: int64
        amount:
          type: number
          format: float
        term_months:
          type: integer
        interest_rate:
          type: number
          format: float
        type:
          type: string
          enum: [standard, installment]
    
    Loan:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        type:
          type: string
          enum: [standard, installment]
        amount:
          type: number
          format: float
        term:
          type: integer
        interest_rate:
          type: number
          format: float
        total_payable:
          type: number
          format: float
        monthly_payment:
          type: number
          format: float
        status:
          type: string
          enum: [pending, approved, active, completed, rejected]
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
    
    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        type:
          type: string
        amount:
          type: number
          format: float
        metadata:
          type: string
        timestamp:
          type: string
          format: date-time
        cancelled:
          type: boolean
        cancelled_by:
          type: integer
          format: int64
        cancel_time:
          type: string
          format: date-time
    
    Error:
      type: object
      properties:
        error:
          type: string

paths:
  # Authentication Endpoints
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  message:
                    type: string
        '400':
          description: Bad request - validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict - username already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/login:
    post:
      summary: Authenticate user and get token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expires:
                    type: string
                    format: date-time
                  user_id:
                    type: integer
                  username:
                    type: string
                  role:
                    type: string
                  approved:
                    type: boolean
        '401':
          description: Unauthorized - invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - account pending approval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/refresh:
    post:
      summary: Refresh authentication token
      tags:
        - Authentication
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Token refresh successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  expires:
                    type: string
                    format: date-time
                  user_id:
                    type: integer
        '401':
          description: Unauthorized - invalid or expired token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  # Deposit Management Endpoints
  /deposit/create:
    post:
      summary: Create a new deposit
      tags:
        - Deposits
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bank_name
                - amount
                - interest
              properties:
                bank_name:
                  type: string
                amount:
                  type: number
                  format: float
                interest:
                  type: number
                  format: float
      responses:
        '201':
          description: Deposit created successfully
        '400':
          description: Bad request - validation error
        '401':
          description: Unauthorized - invalid token
  
  /deposit/list:
    get:
      summary: Get all deposits for the authenticated user
      tags:
        - Deposits
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of deposits
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      deposits:
                        type: array
                        items:
                          $ref: '#/components/schemas/Deposit'
        '401':
          description: Unauthorized - invalid token
  
  /deposit/transfer:
    post:
      summary: Transfer funds between accounts
      tags:
        - Deposits
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bank_name
                - from_account
                - to_account
                - amount
                - deposit_id
              properties:
                bank_name:
                  type: string
                from_account:
                  type: integer
                to_account:
                  type: integer
                amount:
                  type: number
                  format: float
                deposit_id:
                  type: integer
      responses:
        '200':
          description: Transfer completed successfully
        '400':
          description: Bad request - validation error
        '401':
          description: Unauthorized - invalid token
  
  /deposit/freeze:
    post:
      summary: Freeze a deposit for a specified duration
      tags:
        - Deposits
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bank_name
                - deposit_id
                - freeze_duration
              properties:
                bank_name:
                  type: string
                deposit_id:
                  type: integer
                freeze_duration:
                  type: integer
                  description: Duration in days
      responses:
        '200':
          description: Deposit frozen successfully
        '400':
          description: Bad request - validation error
        '401':
          description: Unauthorized - invalid token
  
  /deposit/block:
    post:
      summary: Block a deposit
      tags:
        - Deposits
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bank_name
                - deposit_id
              properties:
                bank_name:
                  type: string
                deposit_id:
                  type: integer
      responses:
        '200':
          description: Deposit blocked successfully
        '400':
          description: Bad request - validation error
        '401':
          description: Unauthorized - invalid token
  
  /deposit/unblock:
    post:
      summary: Unblock a deposit
      tags:
        - Deposits
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bank_name
                - deposit_id
              properties:
                bank_name:
                  type: string
                deposit_id:
                  type: integer
      responses:
        '200':
          description: Deposit unblocked successfully
        '400':
          description: Bad request - validation error
        '401':
          description: Unauthorized - invalid token
  
  /deposit/delete:
    delete:
      summary: Delete a deposit
      tags:
        - Deposits
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - bank_name
                - deposit_id
              properties:
                bank_name:
                  type: string
                deposit_id:
                  type: integer
      responses:
        '200':
          description: Deposit deleted successfully
        '400':
          description: Bad request - validation error
        '401':
          description: Unauthorized - invalid token
  
  # Loan Management Endpoints
  /loan/request:
    post:
      summary: Request a new loan
      tags:
        - Loans
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanRequest'
      responses:
        '201':
          description: Loan request submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  loan:
                    $ref: '#/components/schemas/Loan'
        '400':
          description: Bad request - validation error
        '401':
          description: Unauthorized - invalid token
  
  /loan/list:
    get:
      summary: Get all loans for the authenticated user
      tags:
        - Loans
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of loans
          content:
            application/json:
              schema:
                type: object
                properties:
                  loans:
                    type: array
                    items:
                      $ref: '#/components/schemas/Loan'
        '401':
          description: Unauthorized - invalid token
  
  /loan/{id}:
    get:
      summary: Get details of a specific loan
      tags:
        - Loans
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Loan details
          content:
            application/json:
              schema:
                type: object
                properties:
                  loan:
                    $ref: '#/components/schemas/Loan'
                  payments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        loan_id:
                          type: integer
                        amount:
                          type: number
                          format: float
                        date:
                          type: string
                          format: date-time
                  paid_amount:
                    type: number
                    format: float
                  remaining_amount:
                    type: number
                    format: float
                  progress_percent:
                    type: number
                    format: float
                  time_info:
                    type: object
        '401':
          description: Unauthorized - invalid token
        '403':
          description: Forbidden - not authorized to view this loan
        '404':
          description: Not found - loan does not exist
  
  /loan/payment:
    post:
      summary: Make a payment on a loan
      tags:
        - Loans
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - loan_id
                - amount
              properties:
                loan_id:
                  type: integer
                  format: int64
                amount:
                  type: number
                  format: float
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  payment:
                    type: object
                    properties:
                      id:
                        type: integer
                      loan_id:
                        type: integer
                      amount:
                        type: number
                        format: float
                      date:
                        type: string
                        format: date-time
        '400':
          description: Bad request - validation error
        '401':
          description: Unauthorized - invalid token
        '403':
          description: Forbidden - not authorized to make payments on this loan
        '404':
          description: Not found - loan does not exist
  
  /loan/rates:
    get:
      summary: Get current loan interest rates
      tags:
        - Loans
      responses:
        '200':
          description: Current loan rates
          content:
            application/json:
              schema:
                type: object
                properties:
                  rates:
                    type: object
                    additionalProperties:
                      type: number
                      format: float
                  note:
                    type: string
  
  # Admin Endpoints
  /admin/pending-users:
    get:
      summary: Get all pending user registrations
      tags:
        - Admin
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of pending users
          content:
            application/json:
              schema:
                type: object
                properties:
                  pending_users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized - invalid token
        '403':
          description: Forbidden - admin privileges required
  
  /admin/approve-user:
    post:
      summary: Approve a user registration
      tags:
        - Admin
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: integer
                  format: int64
      responses:
        '200':
          description: User approved successfully
        '401':
          description: Unauthorized - invalid token
        '403':
          description: Forbidden - admin privileges required
  
  /admin/reject-user:
    post:
      summary: Reject a user registration
      tags:
        - Admin
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
              properties:
                user_id:
                  type: integer
                  format: int64
      responses:
        '200':
          description: User rejected successfully
        '401':
          description: Unauthorized - invalid token
        '403':
          description: Forbidden - admin privileges required
  
  # Manager Endpoints
  /manager/loans/review:
    post:
      summary: Review a loan request (approve or reject)
      tags:
        - Manager
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - loan_id
                - action
              properties:
                loan_id:
                  type: integer
                  format: int64
                action:
                  type: string
                  enum: [approve, reject]
                comment:
                  type: string
                  description: Required for rejection
      responses:
        '200':
          description: Loan reviewed successfully
        '400':
          description: Bad request - validation error or invalid loan status
        '401':
          description: Unauthorized - invalid token
        '403':
          description: Forbidden - manager privileges required
        '404':
          description: Not found - loan does not exist
  
  /manager/loans/pending:
    get:
      summary: Get loans that need manager review
      tags:
        - Manager
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [pending, approved, rejected, active, completed]
            default: pending
      responses:
        '200':
          description: List of loans with the specified status
          content:
            application/json:
              schema:
                type: object
                properties:
                  loans:
                    type: array
                    items:
                      type: object
                      allOf:
                        - $ref: '#/components/schemas/Loan'
                        - type: object
                          properties:
                            username:
                              type: string
                            needs_review:
                              type: boolean
                  total_pending:
                    type: integer
        '401':
          description: Unauthorized - invalid token
        '403':
          description: Forbidden - manager privileges required
  
  /manager/loans/process:
    post:
      summary: Create and process a new loan for a user
      tags:
        - Manager
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - type
                - amount
                - duration
                - action
              properties:
                user_id:
                  type: integer
                  format: int64
                type:
                  type: string
                  enum: [standard, installment]
                amount:
                  type: number
                  format: float
                duration:
                  type: integer
                  description: Term in months
                action:
                  type: string
                  enum: [approve, reject]
                comment:
                  type: string
                interest_rate:
                  type: number
                  format: float
      responses:
        '200':
          description: Loan processed successfully
        '400':
          description: Bad request - validation error
        '401':
          description: Unauthorized - invalid token
        '403':
          description: Forbidden - manager privileges required

  # Transaction Management Endpoints
  /manager/transactions:
    get:
      summary: Get transaction history with filters
      tags:
        - Transactions
      security:
        - BearerAuth: []
      parameters:
        - name: username
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized - invalid token
        '403':
          description: Forbidden - insufficient privileges
  
  /manager/transactions/statistics:
    get:
      summary: Get transaction statistics
      tags:
        - Transactions
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Transaction statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_transactions:
                    type: integer
                  total_amount:
                    type: number
                    format: float
                  active_users:
                    type: integer
                  avg_transaction:
                    type: number
                    format: float
        '401':
          description: Unauthorized - invalid token
        '403':
          description: Forbidden - insufficient privileges
  
  /manager/transactions/cancel:
    post:
      summary: Cancel a transaction
      tags:
        - Transactions
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - transaction_id
              properties:
                transaction_id:
                  type: integer
                  format: int64
      responses:
        '200':
          description: Transaction cancelled successfully
        '400':
          description: Bad request - validation error
        '401':
          description: Unauthorized - invalid token
        '403':
          description: Forbidden - insufficient privileges
